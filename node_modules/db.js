var EventEmitter = require('events').EventEmitter;
//configuration of database connection
var dbconfig = {
    host: "localhost",
    user: "openchat",
    password: "openchat",
    database: "open-chat"
};

var jsORM = require('js-hibernate');
var dbSession = jsORM.session(dbconfig);

//Maping of member table
var userMap = dbSession.tableMap('member')
    .columnMap('id', 'id') 
    .columnMap('alias', 'alias')
    .columnMap('password', 'password');

function addUser (alias, password, role) {
        var newUser = {
        'alias': alias,
        'password': password,
        'role' : role
    };

    userMap.Insert(newUser).then(function (result) {
        console.log('inserted: ' + result.affectedRows);
    }).catch(function (error) {
        console.log('Error: ' + error);
    });
};

function getUser(alias, password) {
    var getUserEvent = new EventEmitter();
    var query = dbSession.query(userMap).where(userMap.alias.Equal(alias).And().password.Equal(password));
    query.then(
        function(result) {
            console.log(result);
            if(result.length == 1) { 
                console.log(result);
                getUserEvent.emit("success", result);
            } else {
                getUserEvent.emit("error", "Member not found");
                console.log('Error: ' + result);
            }
        }).catch(function(error) {
            getUserEvent.emit("error", error);
            console.log('Error: ' + error);
        });
    return getUserEvent;
};

exports.getUser = getUser;
exports.addUser = addUser;