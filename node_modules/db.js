var EventEmitter = require('events').EventEmitter;
var dbconfig = {
    host: "localhost",
    user: "openchat",
    password: "openchat",
    database: "open-chat"
};
var jsORM = require('js-hibernate');
var dbSession = jsORM.session(dbconfig);
var userMap = dbSession.tableMap('member')
    // columnMap(object-name-property, table-name-property, optional-property-config)
    .columnMap('id', 'id') 
    .columnMap('alias', 'alias')
    .columnMap('password', 'password');
function addUser (alias, password, role) {
    var newUser = {
    'alias': alias,
    'password': password,
    'role' : role
};
// insert into `User` (`shortName`, `tel`) values ('newUser', '555-555')
userMap.Insert(newUser).then(function (result) {
    console.log('inserted: ' + result.affectedRows);
}).catch(function (error) {
    console.log('Error: ' + error);
});
};
function getUser(alias, password) {
    var getUserEvent = new EventEmitter();
    var query = dbSession.query(userMap).where(userMap.alias.Equal(alias).And().password.Equal(password));

    query.then(function(result) {
        console.log(result); // array with result
        if(result.length == 1) { 
        getUser.emit("success", result);
        }
        else {
            getUser.emit("error", "Member not found");
            console.log('Error: ' + result);
        }
    }).catch(function(error) {
        getUser.emit("error", error);
        console.log('Error: ' + error);
    });
    return getUserEvent;
};
exports.getUser = getUser;
exports.addUser = addUser;